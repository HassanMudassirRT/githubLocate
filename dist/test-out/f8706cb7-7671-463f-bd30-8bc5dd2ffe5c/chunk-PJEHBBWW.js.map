{"version":3,"sources":["angular:jit:template:src/app/components/navbar/navbar.html","node_modules/primeng/fesm2022/primeng-autofocus.mjs","node_modules/primeng/fesm2022/primeng-badge.mjs","node_modules/primeng/fesm2022/primeng-button.mjs","src/app/components/navbar/navbar.ts"],"sourcesContent":["<header class=\"p-4 md:p-5 lg:p-6 xl:p-8 backdrop-blur-md border-b border-zinc-400/50\">\n  <nav class=\"flex justify-between items-center md:grid md:grid-cols-3\">\n    <h1\n      class=\"text-xl md:text-4xl xl:text-5xl col-start-2 col-end-3 text-center cursor-pointer transition-all duration-300\"\n      (click)=\"router.navigate(['/'])\"\n    >\n      githubLocate\n    </h1>\n    <p-button\n      [icon]=\"isDarkMode() ? 'pi pi-moon' : 'pi pi-sun'\"\n      [outlined]=\"true\"\n      size=\"small\"\n      (click)=\"toggleDarkMode()\"\n      class=\"col-start-3 col-end-4 justify-self-end px-3 py-2 text-sm md:px-4 md:py-2.5 md:text-base lg:px-5 lg:py-3 lg:text-lg md:scale-110 lg:scale-130\"\n      ariaLabel=\"Toggle dark mode\"\n    />\n  </nav>\n</header>\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, ElementRef, Input, Directive, NgModule } from '@angular/core';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nclass AutoFocus extends BaseComponent {\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus = false;\n    focused = false;\n    platformId = inject(PLATFORM_ID);\n    document = inject(DOCUMENT);\n    host = inject(ElementRef);\n    ngAfterContentChecked() {\n        // This sets the `attr.autofocus` which is different than the Input `autofocus` attribute.\n        if (this.autofocus === false) {\n            this.host.nativeElement.removeAttribute('autofocus');\n        }\n        else {\n            this.host.nativeElement.setAttribute('autofocus', true);\n        }\n        if (!this.focused) {\n            this.autoFocus();\n        }\n    }\n    ngAfterViewChecked() {\n        if (!this.focused) {\n            this.autoFocus();\n        }\n    }\n    autoFocus() {\n        if (isPlatformBrowser(this.platformId) && this.autofocus) {\n            setTimeout(() => {\n                const focusableElements = DomHandler.getFocusableElements(this.host?.nativeElement);\n                if (focusableElements.length === 0) {\n                    this.host.nativeElement.focus();\n                }\n                if (focusableElements.length > 0) {\n                    focusableElements[0].focus();\n                }\n                this.focused = true;\n            });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocus, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.3\", type: AutoFocus, isStandalone: true, selector: \"[pAutoFocus]\", inputs: { autofocus: [\"pAutoFocus\", \"autofocus\"] }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pAutoFocus]',\n                    standalone: true\n                }]\n        }], propDecorators: { autofocus: [{\n                type: Input,\n                args: ['pAutoFocus']\n            }] } });\nclass AutoFocusModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocusModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocusModule, imports: [AutoFocus], exports: [AutoFocus] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocusModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: AutoFocusModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [AutoFocus],\n                    exports: [AutoFocus]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };\n\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, Directive, input, booleanAttribute, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { isEmpty, isNotEmpty, uuid, hasClass, removeClass, addClass } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/badge';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = /*css*/ `\n    ${style}\n\n    /* For PrimeNG (directive)*/\n    .p-overlay-badge {\n        position: relative;\n    }\n\n    .p-overlay-badge > .p-badge {\n        position: absolute;\n        top: 0;\n        inset-inline-end: 0;\n        transform: translate(50%, -50%);\n        transform-origin: 100% 0;\n        margin: 0;\n    }\n`;\nconst classes = {\n    root: ({ instance }) => [\n        'p-badge p-component',\n        {\n            'p-badge-circle': isNotEmpty(instance.value()) && String(instance.value()).length === 1,\n            'p-badge-dot': isEmpty(instance.value()),\n            'p-badge-sm': instance.size() === 'small' || instance.badgeSize() === 'small',\n            'p-badge-lg': instance.size() === 'large' || instance.badgeSize() === 'large',\n            'p-badge-xl': instance.size() === 'xlarge' || instance.badgeSize() === 'xlarge',\n            'p-badge-info': instance.severity() === 'info',\n            'p-badge-success': instance.severity() === 'success',\n            'p-badge-warn': instance.severity() === 'warn',\n            'p-badge-danger': instance.severity() === 'danger',\n            'p-badge-secondary': instance.severity() === 'secondary',\n            'p-badge-contrast': instance.severity() === 'contrast'\n        }\n    ]\n};\nclass BadgeStyle extends BaseStyle {\n    name = 'badge';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Badge represents people using icons, labels and images.\n *\n * [Live Demo](https://www.primeng.org/badge)\n *\n * @module badgestyle\n *\n */\nvar BadgeClasses;\n(function (BadgeClasses) {\n    /**\n     * Class name of the root element\n     */\n    BadgeClasses[\"root\"] = \"p-badge\";\n})(BadgeClasses || (BadgeClasses = {}));\n\n/**\n * Badge Directive is directive usage of badge component.\n * @group Components\n */\nclass BadgeDirective extends BaseComponent {\n    /**\n     * When specified, disables the component.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    badgeSize;\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     * @deprecated use badgeSize instead.\n     */\n    set size(value) {\n        this._size = value;\n        console.log('size property is deprecated and will removed in v18, use badgeSize instead.');\n    }\n    get size() {\n        return this._size;\n    }\n    _size;\n    /**\n     * Severity type of the badge.\n     * @group Props\n     */\n    severity;\n    /**\n     * Value to display inside the badge.\n     * @group Props\n     */\n    value;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    badgeStyle;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    badgeStyleClass;\n    id;\n    badgeEl;\n    _componentStyle = inject(BadgeStyle);\n    get activeElement() {\n        return this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n    }\n    get canUpdateBadge() {\n        return this.id && !this.disabled;\n    }\n    constructor() {\n        super();\n    }\n    ngOnChanges({ value, size, severity, disabled, badgeStyle, badgeStyleClass }) {\n        super.ngOnChanges({ value, size, severity, disabled });\n        if (disabled) {\n            this.toggleDisableState();\n        }\n        if (!this.canUpdateBadge) {\n            return;\n        }\n        if (severity) {\n            this.setSeverity(severity.previousValue);\n        }\n        if (size) {\n            this.setSizeClasses();\n        }\n        if (value) {\n            this.setValue();\n        }\n        if (badgeStyle || badgeStyleClass) {\n            this.applyStyles();\n        }\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.id = uuid('pn_id_') + '_badge';\n        this.renderBadgeContent();\n    }\n    setValue(element) {\n        const badge = element ?? this.document.getElementById(this.id);\n        if (!badge) {\n            return;\n        }\n        if (this.value != null) {\n            if (hasClass(badge, 'p-badge-dot')) {\n                removeClass(badge, 'p-badge-dot');\n            }\n            if (this.value && String(this.value).length === 1) {\n                addClass(badge, 'p-badge-circle');\n            }\n            else {\n                removeClass(badge, 'p-badge-circle');\n            }\n        }\n        else {\n            if (!hasClass(badge, 'p-badge-dot')) {\n                addClass(badge, 'p-badge-dot');\n            }\n            removeClass(badge, 'p-badge-circle');\n        }\n        badge.innerHTML = '';\n        const badgeValue = this.value != null ? String(this.value) : '';\n        this.renderer.appendChild(badge, this.document.createTextNode(badgeValue));\n    }\n    setSizeClasses(element) {\n        const badge = element ?? this.document.getElementById(this.id);\n        if (!badge) {\n            return;\n        }\n        if (this.badgeSize) {\n            if (this.badgeSize === 'large') {\n                addClass(badge, 'p-badge-lg');\n                removeClass(badge, 'p-badge-xl');\n            }\n            if (this.badgeSize === 'xlarge') {\n                addClass(badge, 'p-badge-xl');\n                removeClass(badge, 'p-badge-lg');\n            }\n        }\n        else if (this.size && !this.badgeSize) {\n            if (this.size === 'large') {\n                addClass(badge, 'p-badge-lg');\n                removeClass(badge, 'p-badge-xl');\n            }\n            if (this.size === 'xlarge') {\n                addClass(badge, 'p-badge-xl');\n                removeClass(badge, 'p-badge-lg');\n            }\n        }\n        else {\n            removeClass(badge, 'p-badge-lg');\n            removeClass(badge, 'p-badge-xl');\n        }\n    }\n    renderBadgeContent() {\n        if (this.disabled) {\n            return null;\n        }\n        const el = this.activeElement;\n        const badge = this.document.createElement('span');\n        badge.id = this.id;\n        badge.className = 'p-badge p-component';\n        this.setSeverity(null, badge);\n        this.setSizeClasses(badge);\n        this.setValue(badge);\n        addClass(el, 'p-overlay-badge');\n        this.renderer.appendChild(el, badge);\n        this.badgeEl = badge;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.badgeEl && this.badgeStyle && typeof this.badgeStyle === 'object') {\n            for (const [key, value] of Object.entries(this.badgeStyle)) {\n                this.renderer.setStyle(this.badgeEl, key, value);\n            }\n        }\n        if (this.badgeEl && this.badgeStyleClass) {\n            this.badgeEl.classList.add(...this.badgeStyleClass.split(' '));\n        }\n    }\n    setSeverity(oldSeverity, element) {\n        const badge = element ?? this.document.getElementById(this.id);\n        if (!badge) {\n            return;\n        }\n        if (this.severity) {\n            addClass(badge, `p-badge-${this.severity}`);\n        }\n        if (oldSeverity) {\n            removeClass(badge, `p-badge-${oldSeverity}`);\n        }\n    }\n    toggleDisableState() {\n        if (!this.id) {\n            return;\n        }\n        if (this.disabled) {\n            const badge = this.activeElement?.querySelector(`#${this.id}`);\n            if (badge) {\n                this.renderer.removeChild(this.activeElement, badge);\n            }\n        }\n        else {\n            this.renderBadgeContent();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.3\", type: BadgeDirective, isStandalone: true, selector: \"[pBadge]\", inputs: { disabled: [\"badgeDisabled\", \"disabled\"], badgeSize: \"badgeSize\", size: \"size\", severity: \"severity\", value: \"value\", badgeStyle: \"badgeStyle\", badgeStyleClass: \"badgeStyleClass\" }, providers: [BadgeStyle], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pBadge]',\n                    providers: [BadgeStyle],\n                    standalone: true\n                }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: ['badgeDisabled']\n            }], badgeSize: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], severity: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], badgeStyle: [{\n                type: Input\n            }], badgeStyleClass: [{\n                type: Input\n            }] } });\n/**\n * Badge is a small status indicator for another element.\n * @group Components\n */\nclass Badge extends BaseComponent {\n    /**\n     * Class of the element.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    styleClass = input(...(ngDevMode ? [undefined, { debugName: \"styleClass\" }] : []));\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    badgeSize = input(...(ngDevMode ? [undefined, { debugName: \"badgeSize\" }] : []));\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    size = input(...(ngDevMode ? [undefined, { debugName: \"size\" }] : []));\n    /**\n     * Severity type of the badge.\n     * @group Props\n     */\n    severity = input(...(ngDevMode ? [undefined, { debugName: \"severity\" }] : []));\n    /**\n     * Value to display inside the badge.\n     * @group Props\n     */\n    value = input(...(ngDevMode ? [undefined, { debugName: \"value\" }] : []));\n    /**\n     * When specified, disables the component.\n     * @group Props\n     */\n    badgeDisabled = input(false, ...(ngDevMode ? [{ debugName: \"badgeDisabled\", transform: booleanAttribute }] : [{ transform: booleanAttribute }]));\n    _componentStyle = inject(BadgeStyle);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: Badge, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.1.3\", type: Badge, isStandalone: true, selector: \"p-badge\", inputs: { styleClass: { classPropertyName: \"styleClass\", publicName: \"styleClass\", isSignal: true, isRequired: false, transformFunction: null }, badgeSize: { classPropertyName: \"badgeSize\", publicName: \"badgeSize\", isSignal: true, isRequired: false, transformFunction: null }, size: { classPropertyName: \"size\", publicName: \"size\", isSignal: true, isRequired: false, transformFunction: null }, severity: { classPropertyName: \"severity\", publicName: \"severity\", isSignal: true, isRequired: false, transformFunction: null }, value: { classPropertyName: \"value\", publicName: \"value\", isSignal: true, isRequired: false, transformFunction: null }, badgeDisabled: { classPropertyName: \"badgeDisabled\", publicName: \"badgeDisabled\", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { \"class\": \"cn(cx('root'), styleClass())\", \"style.display\": \"badgeDisabled() ? \\\"none\\\" : null\" } }, providers: [BadgeStyle], usesInheritance: true, ngImport: i0, template: `{{ value() }}`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: Badge, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-badge',\n                    template: `{{ value() }}`,\n                    standalone: true,\n                    imports: [CommonModule, SharedModule],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [BadgeStyle],\n                    host: {\n                        '[class]': \"cn(cx('root'), styleClass())\",\n                        '[style.display]': 'badgeDisabled() ? \"none\" : null'\n                    }\n                }]\n        }] });\nclass BadgeModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeModule, imports: [Badge, BadgeDirective, SharedModule], exports: [Badge, BadgeDirective, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeModule, imports: [Badge, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: BadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Badge, BadgeDirective, SharedModule],\n                    exports: [Badge, BadgeDirective, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Badge, BadgeClasses, BadgeDirective, BadgeModule, BadgeStyle };\n\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Directive, contentChild, computed, input, booleanAttribute, Input, EventEmitter, numberAttribute, ContentChildren, ContentChild, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { addClass, isEmpty, findSingle } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport * as i2 from 'primeng/badge';\nimport { BadgeModule } from 'primeng/badge';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Fluid } from 'primeng/fluid';\nimport { SpinnerIcon } from 'primeng/icons';\nimport { Ripple } from 'primeng/ripple';\nimport { style } from '@primeuix/styles/button';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-button p-component',\n        {\n            'p-button-icon-only': (instance.icon || instance.buttonProps?.icon || instance.iconTemplate || instance._iconTemplate || instance.loadingIcon || instance.loadingIconTemplate || instance._loadingIconTemplate) &&\n                !instance.label &&\n                !instance.buttonProps?.label,\n            'p-button-vertical': (instance.iconPos === 'top' || instance.iconPos === 'bottom') && instance.label,\n            'p-button-loading': instance.loading || instance.buttonProps?.loading,\n            'p-button-link': instance.link || instance.buttonProps?.link,\n            [`p-button-${instance.severity || instance.buttonProps?.severity}`]: instance.severity || instance.buttonProps?.severity,\n            'p-button-raised': instance.raised || instance.buttonProps?.raised,\n            'p-button-rounded': instance.rounded || instance.buttonProps?.rounded,\n            'p-button-text': instance.text || instance.variant === 'text' || instance.buttonProps?.text || instance.buttonProps?.variant === 'text',\n            'p-button-outlined': instance.outlined || instance.variant === 'outlined' || instance.buttonProps?.outlined || instance.buttonProps?.variant === 'outlined',\n            'p-button-sm': instance.size === 'small' || instance.buttonProps?.size === 'small',\n            'p-button-lg': instance.size === 'large' || instance.buttonProps?.size === 'large',\n            'p-button-plain': instance.plain || instance.buttonProps?.plain,\n            'p-button-fluid': instance.hasFluid\n        }\n    ],\n    loadingIcon: 'p-button-loading-icon',\n    icon: ({ instance }) => [\n        'p-button-icon',\n        {\n            [`p-button-icon-${instance.iconPos || instance.buttonProps?.iconPos}`]: instance.label || instance.buttonProps?.label,\n            'p-button-icon-left': ((instance.iconPos === 'left' || instance.buttonProps?.iconPos === 'left') && instance.label) || instance.buttonProps?.label,\n            'p-button-icon-right': ((instance.iconPos === 'right' || instance.buttonProps?.iconPos === 'right') && instance.label) || instance.buttonProps?.label\n        },\n        instance.icon,\n        instance.buttonProps?.icon\n    ],\n    spinnerIcon: ({ instance }) => {\n        return Object.entries(instance.iconClass())\n            .filter(([, value]) => !!value)\n            .reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n    },\n    label: 'p-button-label'\n};\nclass ButtonStyle extends BaseStyle {\n    name = 'button';\n    theme = style;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Button is an extension to standard button element with icons and theming.\n *\n * [Live Demo](https://www.primeng.org/button/)\n *\n * @module buttonstyle\n *\n */\nvar ButtonClasses;\n(function (ButtonClasses) {\n    /**\n     * Class name of the root element\n     */\n    ButtonClasses[\"root\"] = \"p-button\";\n    /**\n     * Class name of the loading icon element\n     */\n    ButtonClasses[\"loadingIcon\"] = \"p-button-loading-icon\";\n    /**\n     * Class name of the icon element\n     */\n    ButtonClasses[\"icon\"] = \"p-button-icon\";\n    /**\n     * Class name of the label element\n     */\n    ButtonClasses[\"label\"] = \"p-button-label\";\n})(ButtonClasses || (ButtonClasses = {}));\n\nconst INTERNAL_BUTTON_CLASSES = {\n    button: 'p-button',\n    component: 'p-component',\n    iconOnly: 'p-button-icon-only',\n    disabled: 'p-disabled',\n    loading: 'p-button-loading',\n    labelOnly: 'p-button-loading-label-only'\n};\nclass ButtonLabel extends BaseComponent {\n    _componentStyle = inject(ButtonStyle);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.3\", type: ButtonLabel, isStandalone: true, selector: \"[pButtonLabel]\", host: { properties: { \"class.p-button-label\": \"true\" } }, providers: [ButtonStyle], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pButtonLabel]',\n                    providers: [ButtonStyle],\n                    standalone: true,\n                    host: {\n                        '[class.p-button-label]': 'true'\n                    }\n                }]\n        }] });\nclass ButtonIcon extends BaseComponent {\n    _componentStyle = inject(ButtonStyle);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.1.3\", type: ButtonIcon, isStandalone: true, selector: \"[pButtonIcon]\", host: { properties: { \"class.p-button-icon\": \"true\" } }, providers: [ButtonStyle], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pButtonIcon]',\n                    providers: [ButtonStyle],\n                    standalone: true,\n                    host: {\n                        '[class.p-button-icon]': 'true'\n                    }\n                }]\n        }] });\n/**\n * Button directive is an extension to button component.\n * @group Components\n */\nclass ButtonDirective extends BaseComponent {\n    /**\n     * Position of the icon.\n     * @deprecated utilize pButtonIcon and pButtonLabel directives.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Uses to pass attributes to the loading icon's DOM element.\n     * @deprecated utilize pButonIcon instead.\n     * @group Props\n     */\n    loadingIcon;\n    set label(val) {\n        this._label = val;\n        if (this.initialized) {\n            this.updateLabel();\n            this.updateIcon();\n            this.setStyleClass();\n        }\n    }\n    set icon(val) {\n        this._icon = val;\n        if (this.initialized) {\n            this.updateIcon();\n            this.setStyleClass();\n        }\n    }\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    get loading() {\n        return this._loading;\n    }\n    set loading(val) {\n        this._loading = val;\n        if (this.initialized) {\n            this.updateIcon();\n            this.setStyleClass();\n        }\n    }\n    _buttonProps;\n    iconSignal = contentChild(ButtonIcon, ...(ngDevMode ? [{ debugName: \"iconSignal\" }] : []));\n    labelSignal = contentChild(ButtonLabel, ...(ngDevMode ? [{ debugName: \"labelSignal\" }] : []));\n    isIconOnly = computed(() => !!(!this.labelSignal() && this.iconSignal()), ...(ngDevMode ? [{ debugName: \"isIconOnly\" }] : []));\n    set buttonProps(val) {\n        this._buttonProps = val;\n        if (val && typeof val === 'object') {\n            //@ts-ignore\n            Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n        }\n    }\n    _severity;\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    get severity() {\n        return this._severity;\n    }\n    set severity(value) {\n        this._severity = value;\n        if (this.initialized) {\n            this.setStyleClass();\n        }\n    }\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    raised = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    rounded = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    text = false;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    outlined = false;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    size = null;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @group Props\n     */\n    plain = false;\n    /**\n     * Spans 100% width of the container when enabled.\n     * @defaultValue undefined\n     * @group Props\n     */\n    fluid = input(undefined, ...(ngDevMode ? [{ debugName: \"fluid\", transform: booleanAttribute }] : [{ transform: booleanAttribute }]));\n    _label;\n    _icon;\n    _loading = false;\n    initialized;\n    get htmlElement() {\n        return this.el.nativeElement;\n    }\n    _internalClasses = Object.values(INTERNAL_BUTTON_CLASSES);\n    pcFluid = inject(Fluid, { optional: true, host: true, skipSelf: true });\n    isTextButton = computed(() => !!(!this.iconSignal() && this.labelSignal() && this.text), ...(ngDevMode ? [{ debugName: \"isTextButton\" }] : []));\n    /**\n     * Text of the button.\n     * @deprecated use pButtonLabel directive instead.\n     * @group Props\n     */\n    get label() {\n        return this._label;\n    }\n    /**\n     * Name of the icon.\n     * @deprecated use pButtonIcon directive instead\n     * @group Props\n     */\n    get icon() {\n        return this._icon;\n    }\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @deprecated assign props directly to the button element.\n     * @group Props\n     */\n    get buttonProps() {\n        return this._buttonProps;\n    }\n    spinnerIcon = `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"p-icon-spin\">\n        <g clip-path=\"url(#clip0_417_21408)\">\n            <path\n                d=\"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\"\n                fill=\"currentColor\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0_417_21408\">\n                <rect width=\"14\" height=\"14\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>`;\n    _componentStyle = inject(ButtonStyle);\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        addClass(this.htmlElement, this.getStyleClass().join(' '));\n        this.createIcon();\n        this.createLabel();\n        this.initialized = true;\n    }\n    getStyleClass() {\n        const styleClass = [INTERNAL_BUTTON_CLASSES.button, INTERNAL_BUTTON_CLASSES.component];\n        if (this.icon && !this.label && isEmpty(this.htmlElement.textContent)) {\n            styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n        }\n        if (this.loading) {\n            styleClass.push(INTERNAL_BUTTON_CLASSES.disabled, INTERNAL_BUTTON_CLASSES.loading);\n            if (!this.icon && this.label) {\n                styleClass.push(INTERNAL_BUTTON_CLASSES.labelOnly);\n            }\n            if (this.icon && !this.label && !isEmpty(this.htmlElement.textContent)) {\n                styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n            }\n        }\n        if (this.text) {\n            styleClass.push('p-button-text');\n        }\n        if (this.severity) {\n            styleClass.push(`p-button-${this.severity}`);\n        }\n        if (this.plain) {\n            styleClass.push('p-button-plain');\n        }\n        if (this.raised) {\n            styleClass.push('p-button-raised');\n        }\n        if (this.size) {\n            styleClass.push(`p-button-${this.size}`);\n        }\n        if (this.outlined) {\n            styleClass.push('p-button-outlined');\n        }\n        if (this.rounded) {\n            styleClass.push('p-button-rounded');\n        }\n        if (this.size === 'small') {\n            styleClass.push('p-button-sm');\n        }\n        if (this.size === 'large') {\n            styleClass.push('p-button-lg');\n        }\n        if (this.hasFluid) {\n            styleClass.push('p-button-fluid');\n        }\n        return styleClass;\n    }\n    get hasFluid() {\n        return this.fluid() ?? !!this.pcFluid;\n    }\n    setStyleClass() {\n        const styleClass = this.getStyleClass();\n        this.removeExistingSeverityClass();\n        this.htmlElement.classList.remove(...this._internalClasses);\n        this.htmlElement.classList.add(...styleClass);\n    }\n    removeExistingSeverityClass() {\n        const severityArray = ['success', 'info', 'warn', 'danger', 'help', 'primary', 'secondary', 'contrast'];\n        const existingSeverityClass = this.htmlElement.classList.value.split(' ').find((cls) => severityArray.some((severity) => cls === `p-button-${severity}`));\n        if (existingSeverityClass) {\n            this.htmlElement.classList.remove(existingSeverityClass);\n        }\n    }\n    createLabel() {\n        const created = findSingle(this.htmlElement, '.p-button-label');\n        if (!created && this.label) {\n            let labelElement = this.document.createElement('span');\n            if (this.icon && !this.label) {\n                labelElement.setAttribute('aria-hidden', 'true');\n            }\n            labelElement.className = 'p-button-label';\n            labelElement.appendChild(this.document.createTextNode(this.label));\n            this.htmlElement.appendChild(labelElement);\n        }\n    }\n    createIcon() {\n        const created = findSingle(this.htmlElement, '.p-button-icon');\n        if (!created && (this.icon || this.loading)) {\n            let iconElement = this.document.createElement('span');\n            iconElement.className = 'p-button-icon';\n            iconElement.setAttribute('aria-hidden', 'true');\n            let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n            if (iconPosClass) {\n                addClass(iconElement, iconPosClass);\n            }\n            let iconClass = this.getIconClass();\n            if (iconClass) {\n                addClass(iconElement, iconClass);\n            }\n            if (!this.loadingIcon && this.loading) {\n                iconElement.innerHTML = this.spinnerIcon;\n            }\n            this.htmlElement.insertBefore(iconElement, this.htmlElement.firstChild);\n        }\n    }\n    updateLabel() {\n        let labelElement = findSingle(this.htmlElement, '.p-button-label');\n        if (!this.label) {\n            labelElement && this.htmlElement.removeChild(labelElement);\n            return;\n        }\n        labelElement ? (labelElement.textContent = this.label) : this.createLabel();\n    }\n    updateIcon() {\n        let iconElement = findSingle(this.htmlElement, '.p-button-icon');\n        let labelElement = findSingle(this.htmlElement, '.p-button-label');\n        if (this.loading && !this.loadingIcon && iconElement) {\n            iconElement.innerHTML = this.spinnerIcon;\n        }\n        else if (iconElement?.innerHTML) {\n            iconElement.innerHTML = '';\n        }\n        if (iconElement) {\n            if (this.iconPos) {\n                iconElement.className = 'p-button-icon ' + (labelElement ? 'p-button-icon-' + this.iconPos : '') + ' ' + this.getIconClass();\n            }\n            else {\n                iconElement.className = 'p-button-icon ' + this.getIconClass();\n            }\n        }\n        else {\n            this.createIcon();\n        }\n    }\n    getIconClass() {\n        return this.loading ? 'p-button-loading-icon ' + (this.loadingIcon ? this.loadingIcon : 'p-icon') : this.icon || 'p-hidden';\n    }\n    ngOnDestroy() {\n        this.initialized = false;\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"17.2.0\", version: \"20.1.3\", type: ButtonDirective, isStandalone: true, selector: \"[pButton]\", inputs: { iconPos: { classPropertyName: \"iconPos\", publicName: \"iconPos\", isSignal: false, isRequired: false, transformFunction: null }, loadingIcon: { classPropertyName: \"loadingIcon\", publicName: \"loadingIcon\", isSignal: false, isRequired: false, transformFunction: null }, loading: { classPropertyName: \"loading\", publicName: \"loading\", isSignal: false, isRequired: false, transformFunction: null }, severity: { classPropertyName: \"severity\", publicName: \"severity\", isSignal: false, isRequired: false, transformFunction: null }, raised: { classPropertyName: \"raised\", publicName: \"raised\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, rounded: { classPropertyName: \"rounded\", publicName: \"rounded\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, text: { classPropertyName: \"text\", publicName: \"text\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, outlined: { classPropertyName: \"outlined\", publicName: \"outlined\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, size: { classPropertyName: \"size\", publicName: \"size\", isSignal: false, isRequired: false, transformFunction: null }, plain: { classPropertyName: \"plain\", publicName: \"plain\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, fluid: { classPropertyName: \"fluid\", publicName: \"fluid\", isSignal: true, isRequired: false, transformFunction: null }, label: { classPropertyName: \"label\", publicName: \"label\", isSignal: false, isRequired: false, transformFunction: null }, icon: { classPropertyName: \"icon\", publicName: \"icon\", isSignal: false, isRequired: false, transformFunction: null }, buttonProps: { classPropertyName: \"buttonProps\", publicName: \"buttonProps\", isSignal: false, isRequired: false, transformFunction: null } }, host: { properties: { \"class.p-button-icon-only\": \"isIconOnly()\", \"class.p-button-text\": \"isTextButton()\" } }, providers: [ButtonStyle], queries: [{ propertyName: \"iconSignal\", first: true, predicate: ButtonIcon, descendants: true, isSignal: true }, { propertyName: \"labelSignal\", first: true, predicate: ButtonLabel, descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pButton]',\n                    standalone: true,\n                    providers: [ButtonStyle],\n                    host: {\n                        '[class.p-button-icon-only]': 'isIconOnly()',\n                        '[class.p-button-text]': 'isTextButton()'\n                    }\n                }]\n        }], propDecorators: { iconPos: [{\n                type: Input\n            }], loadingIcon: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }], severity: [{\n                type: Input\n            }], raised: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], rounded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], text: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], outlined: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], size: [{\n                type: Input\n            }], plain: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], buttonProps: [{\n                type: Input\n            }] } });\n/**\n * Button is an extension to standard button element with icons and theming.\n * @group Components\n */\nclass Button extends BaseComponent {\n    /**\n     * Type of the button.\n     * @group Props\n     */\n    type = 'button';\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Name of the icon.\n     * @group Props\n     */\n    icon;\n    /**\n     * Value of the badge.\n     * @group Props\n     */\n    badge;\n    /**\n     * Uses to pass attributes to the label's DOM element.\n     * @group Props\n     */\n    label;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    loading = false;\n    /**\n     * Icon to display in loading state.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    raised = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    rounded = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    text = false;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @group Props\n     */\n    plain = false;\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    severity;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    outlined = false;\n    /**\n     * Add a link style to the button.\n     * @group Props\n     */\n    link = false;\n    /**\n     * Add a tabindex to the button.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    size;\n    /**\n     * Specifies the variant of the component.\n     * @group Props\n     */\n    variant;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the badge.\n     * @group Props\n     * @deprecated use badgeSeverity instead.\n     */\n    badgeClass;\n    /**\n     * Severity type of the badge.\n     * @group Props\n     * @defaultValue secondary\n     */\n    badgeSeverity = 'secondary';\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Button props as an object.\n     * @group Props\n     */\n    buttonProps;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Spans 100% width of the container when enabled.\n     * @defaultValue undefined\n     * @group Props\n     */\n    fluid = input(undefined, ...(ngDevMode ? [{ debugName: \"fluid\", transform: booleanAttribute }] : [{ transform: booleanAttribute }]));\n    /**\n     * Callback to execute when button is clicked.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (click).\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to execute when button is focused.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (focus).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to execute when button loses focus.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (blur).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Template of the content.\n     * @group Templates\n     **/\n    contentTemplate;\n    /**\n     * Template of the loading.\n     * @group Templates\n     **/\n    loadingIconTemplate;\n    /**\n     * Template of the icon.\n     * @group Templates\n     **/\n    iconTemplate;\n    templates;\n    pcFluid = inject(Fluid, { optional: true, host: true, skipSelf: true });\n    get hasFluid() {\n        return this.fluid() ?? !!this.pcFluid;\n    }\n    _componentStyle = inject(ButtonStyle);\n    _contentTemplate;\n    _iconTemplate;\n    _loadingIconTemplate;\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n                case 'icon':\n                    this._iconTemplate = item.template;\n                    break;\n                case 'loadingicon':\n                    this._loadingIconTemplate = item.template;\n                    break;\n                default:\n                    this._contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    spinnerIconClass() {\n        return Object.entries(this.iconClass())\n            .filter(([, value]) => !!value)\n            .reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n    }\n    iconClass() {\n        return {\n            [`p-button-loading-icon pi-spin ${this.loadingIcon ?? ''}`]: this.loading,\n            'p-button-icon': true,\n            'p-button-icon-left': this.iconPos === 'left' && this.label,\n            'p-button-icon-right': this.iconPos === 'right' && this.label,\n            'p-button-icon-top': this.iconPos === 'top' && this.label,\n            'p-button-icon-bottom': this.iconPos === 'bottom' && this.label\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: Button, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"20.1.3\", type: Button, isStandalone: true, selector: \"p-button\", inputs: { type: { classPropertyName: \"type\", publicName: \"type\", isSignal: false, isRequired: false, transformFunction: null }, iconPos: { classPropertyName: \"iconPos\", publicName: \"iconPos\", isSignal: false, isRequired: false, transformFunction: null }, icon: { classPropertyName: \"icon\", publicName: \"icon\", isSignal: false, isRequired: false, transformFunction: null }, badge: { classPropertyName: \"badge\", publicName: \"badge\", isSignal: false, isRequired: false, transformFunction: null }, label: { classPropertyName: \"label\", publicName: \"label\", isSignal: false, isRequired: false, transformFunction: null }, disabled: { classPropertyName: \"disabled\", publicName: \"disabled\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, loading: { classPropertyName: \"loading\", publicName: \"loading\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, loadingIcon: { classPropertyName: \"loadingIcon\", publicName: \"loadingIcon\", isSignal: false, isRequired: false, transformFunction: null }, raised: { classPropertyName: \"raised\", publicName: \"raised\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, rounded: { classPropertyName: \"rounded\", publicName: \"rounded\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, text: { classPropertyName: \"text\", publicName: \"text\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, plain: { classPropertyName: \"plain\", publicName: \"plain\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, severity: { classPropertyName: \"severity\", publicName: \"severity\", isSignal: false, isRequired: false, transformFunction: null }, outlined: { classPropertyName: \"outlined\", publicName: \"outlined\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, link: { classPropertyName: \"link\", publicName: \"link\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, tabindex: { classPropertyName: \"tabindex\", publicName: \"tabindex\", isSignal: false, isRequired: false, transformFunction: numberAttribute }, size: { classPropertyName: \"size\", publicName: \"size\", isSignal: false, isRequired: false, transformFunction: null }, variant: { classPropertyName: \"variant\", publicName: \"variant\", isSignal: false, isRequired: false, transformFunction: null }, style: { classPropertyName: \"style\", publicName: \"style\", isSignal: false, isRequired: false, transformFunction: null }, styleClass: { classPropertyName: \"styleClass\", publicName: \"styleClass\", isSignal: false, isRequired: false, transformFunction: null }, badgeClass: { classPropertyName: \"badgeClass\", publicName: \"badgeClass\", isSignal: false, isRequired: false, transformFunction: null }, badgeSeverity: { classPropertyName: \"badgeSeverity\", publicName: \"badgeSeverity\", isSignal: false, isRequired: false, transformFunction: null }, ariaLabel: { classPropertyName: \"ariaLabel\", publicName: \"ariaLabel\", isSignal: false, isRequired: false, transformFunction: null }, buttonProps: { classPropertyName: \"buttonProps\", publicName: \"buttonProps\", isSignal: false, isRequired: false, transformFunction: null }, autofocus: { classPropertyName: \"autofocus\", publicName: \"autofocus\", isSignal: false, isRequired: false, transformFunction: booleanAttribute }, fluid: { classPropertyName: \"fluid\", publicName: \"fluid\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { onClick: \"onClick\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, providers: [ButtonStyle], queries: [{ propertyName: \"contentTemplate\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"loadingIconTemplate\", first: true, predicate: [\"loadingicon\"], descendants: true }, { propertyName: \"iconTemplate\", first: true, predicate: [\"icon\"], descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], usesInheritance: true, ngImport: i0, template: `\n        <button\n            [attr.type]=\"type || buttonProps?.type\"\n            [attr.aria-label]=\"ariaLabel || buttonProps?.ariaLabel\"\n            [ngStyle]=\"style || buttonProps?.style\"\n            [disabled]=\"disabled || loading || buttonProps?.disabled\"\n            [class]=\"cn(cx('root'), styleClass, buttonProps?.styleClass)\"\n            (click)=\"onClick.emit($event)\"\n            (focus)=\"onFocus.emit($event)\"\n            (blur)=\"onBlur.emit($event)\"\n            pRipple\n            [attr.data-pc-name]=\"'button'\"\n            [attr.data-pc-section]=\"'root'\"\n            [attr.tabindex]=\"tabindex || buttonProps?.tabindex\"\n            [pAutoFocus]=\"autofocus || buttonProps?.autofocus\"\n        >\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n            <ng-container *ngIf=\"loading\">\n                <ng-container *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\">\n                    <span *ngIf=\"loadingIcon\" [class]=\"cx('loadingIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\"></span>\n                    <svg data-p-icon=\"spinner\" *ngIf=\"!loadingIcon\" [class]=\"cn(cx('loadingIcon'), spinnerIconClass())\" [spin]=\"true\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\" />\n                </ng-container>\n                <ng-template [ngIf]=\"loadingIconTemplate || _loadingIconTemplate\" *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate; context: { class: cx('loadingIcon') }\"></ng-template>\n            </ng-container>\n            <ng-container *ngIf=\"!loading\">\n                <span *ngIf=\"icon && !iconTemplate && !_iconTemplate\" [class]=\"cx('icon')\" [attr.data-pc-section]=\"'icon'\"></span>\n                <ng-template [ngIf]=\"!icon && (iconTemplate || _iconTemplate)\" *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { class: cx('icon') }\"></ng-template>\n            </ng-container>\n            <span [class]=\"cx('label')\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate && !_contentTemplate && label\" [attr.data-pc-section]=\"'label'\">{{ label }}</span>\n            <p-badge *ngIf=\"!contentTemplate && !_contentTemplate && badge\" [value]=\"badge\" [severity]=\"badgeSeverity\"></p-badge>\n        </button>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: Ripple, selector: \"[pRipple]\" }, { kind: \"directive\", type: AutoFocus, selector: \"[pAutoFocus]\", inputs: [\"pAutoFocus\"] }, { kind: \"component\", type: SpinnerIcon, selector: \"[data-p-icon=\\\"spinner\\\"]\" }, { kind: \"ngmodule\", type: BadgeModule }, { kind: \"component\", type: i2.Badge, selector: \"p-badge\", inputs: [\"styleClass\", \"badgeSize\", \"size\", \"severity\", \"value\", \"badgeDisabled\"] }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: Button, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-button',\n                    standalone: true,\n                    imports: [CommonModule, Ripple, AutoFocus, SpinnerIcon, BadgeModule, SharedModule],\n                    template: `\n        <button\n            [attr.type]=\"type || buttonProps?.type\"\n            [attr.aria-label]=\"ariaLabel || buttonProps?.ariaLabel\"\n            [ngStyle]=\"style || buttonProps?.style\"\n            [disabled]=\"disabled || loading || buttonProps?.disabled\"\n            [class]=\"cn(cx('root'), styleClass, buttonProps?.styleClass)\"\n            (click)=\"onClick.emit($event)\"\n            (focus)=\"onFocus.emit($event)\"\n            (blur)=\"onBlur.emit($event)\"\n            pRipple\n            [attr.data-pc-name]=\"'button'\"\n            [attr.data-pc-section]=\"'root'\"\n            [attr.tabindex]=\"tabindex || buttonProps?.tabindex\"\n            [pAutoFocus]=\"autofocus || buttonProps?.autofocus\"\n        >\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n            <ng-container *ngIf=\"loading\">\n                <ng-container *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\">\n                    <span *ngIf=\"loadingIcon\" [class]=\"cx('loadingIcon')\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\"></span>\n                    <svg data-p-icon=\"spinner\" *ngIf=\"!loadingIcon\" [class]=\"cn(cx('loadingIcon'), spinnerIconClass())\" [spin]=\"true\" [attr.aria-hidden]=\"true\" [attr.data-pc-section]=\"'loadingicon'\" />\n                </ng-container>\n                <ng-template [ngIf]=\"loadingIconTemplate || _loadingIconTemplate\" *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate; context: { class: cx('loadingIcon') }\"></ng-template>\n            </ng-container>\n            <ng-container *ngIf=\"!loading\">\n                <span *ngIf=\"icon && !iconTemplate && !_iconTemplate\" [class]=\"cx('icon')\" [attr.data-pc-section]=\"'icon'\"></span>\n                <ng-template [ngIf]=\"!icon && (iconTemplate || _iconTemplate)\" *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { class: cx('icon') }\"></ng-template>\n            </ng-container>\n            <span [class]=\"cx('label')\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate && !_contentTemplate && label\" [attr.data-pc-section]=\"'label'\">{{ label }}</span>\n            <p-badge *ngIf=\"!contentTemplate && !_contentTemplate && badge\" [value]=\"badge\" [severity]=\"badgeSeverity\"></p-badge>\n        </button>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [ButtonStyle]\n                }]\n        }], propDecorators: { type: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], loading: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], loadingIcon: [{\n                type: Input\n            }], raised: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], rounded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], text: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], plain: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], severity: [{\n                type: Input\n            }], outlined: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], link: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabindex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], size: [{\n                type: Input\n            }], variant: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], badgeClass: [{\n                type: Input\n            }], badgeSeverity: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], buttonProps: [{\n                type: Input\n            }], autofocus: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onClick: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], contentTemplate: [{\n                type: ContentChild,\n                args: ['content']\n            }], loadingIconTemplate: [{\n                type: ContentChild,\n                args: ['loadingicon']\n            }], iconTemplate: [{\n                type: ContentChild,\n                args: ['icon']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ButtonModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonModule, imports: [CommonModule, ButtonDirective, Button, SharedModule, ButtonLabel, ButtonIcon], exports: [ButtonDirective, Button, ButtonLabel, ButtonIcon, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonModule, imports: [CommonModule, Button, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonDirective, Button, SharedModule, ButtonLabel, ButtonIcon],\n                    exports: [ButtonDirective, Button, ButtonLabel, ButtonIcon, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonClasses, ButtonDirective, ButtonIcon, ButtonLabel, ButtonModule, ButtonStyle };\n\n","import { Component, signal, OnInit, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [ButtonModule],\n  templateUrl: './navbar.html',\n})\nexport class Navbar implements OnInit {\n  router = inject(Router);\n  isDarkMode = signal(false);\n\n  ngOnInit() {\n    const element = document.documentElement;\n\n    const stored = localStorage.getItem('darkMode');\n    if (stored === '1') {\n      element.classList.add('my-app-dark');\n      this.isDarkMode.set(true);\n      return;\n    }\n    if (stored === '0') {\n      element.classList.remove('my-app-dark');\n      this.isDarkMode.set(false);\n      return;\n    }\n\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      element.classList.add('my-app-dark');\n      this.isDarkMode.set(true);\n    }\n  }\n\n  toggleDarkMode() {\n    const element = document.documentElement;\n    element.classList.toggle('my-app-dark');\n    this.isDarkMode.set(element.classList.contains('my-app-dark'));\n\n    localStorage.setItem('darkMode', this.isDarkMode() ? '1' : '0');\n  }\n}\n"],"mappings":"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","names":["BadgeClasses","s","classes","style","ButtonClasses","Navbar"],"x_google_ignoreList":[1,2,3]}