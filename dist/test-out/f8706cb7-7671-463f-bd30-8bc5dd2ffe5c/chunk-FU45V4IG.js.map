{"version":3,"sources":["angular:jit:template:src/app/components/loader/loader.html","node_modules/primeng/fesm2022/primeng-progressspinner.mjs","src/app/components/loader/loader.ts"],"sourcesContent":["<div class=\"flex flex-col items-center justify-center md:my-8\">\n  <p-progressspinner\n    class=\"mx-auto my-4 size-8 md:size-12\"\n    [strokeWidth]=\"'4'\"\n    animationDuration=\"1s\"\n    aria-label=\"Loading\"\n  />\n  <p class=\"mb-2 md:mt-4 text-center\">{{ label() }}</p>\n</div>\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/progressspinner';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: () => ['p-progressspinner'],\n    spin: 'p-progressspinner-spin',\n    circle: 'p-progressspinner-circle'\n};\nclass ProgressSpinnerStyle extends BaseStyle {\n    name = 'progressspinner';\n    theme = style;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * ProgressSpinner is a process status indicator.\n *\n * [Live Demo](https://www.primeng.org/progressspinner)\n *\n * @module progressspinnerstyle\n *\n */\nvar ProgressSpinnerClasses;\n(function (ProgressSpinnerClasses) {\n    /**\n     * Class name of the root element\n     */\n    ProgressSpinnerClasses[\"root\"] = \"p-progressspinner\";\n    /**\n     * Class name of the spin element\n     */\n    ProgressSpinnerClasses[\"spin\"] = \"p-progressspinner-spin\";\n    /**\n     * Class name of the circle element\n     */\n    ProgressSpinnerClasses[\"circle\"] = \"p-progressspinner-circle\";\n})(ProgressSpinnerClasses || (ProgressSpinnerClasses = {}));\n\n/**\n * ProgressSpinner is a process status indicator.\n * @group Components\n */\nclass ProgressSpinner extends BaseComponent {\n    /**\n     * Class of the element.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Width of the circle stroke.\n     * @group Props\n     */\n    strokeWidth = '2';\n    /**\n     * Color for the background of the circle.\n     * @group Props\n     */\n    fill = 'none';\n    /**\n     * Duration of the rotate animation.\n     * @group Props\n     */\n    animationDuration = '2s';\n    /**\n     * Used to define a aria label attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    _componentStyle = inject(ProgressSpinnerStyle);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinner, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.1.3\", type: ProgressSpinner, isStandalone: true, selector: \"p-progressSpinner, p-progress-spinner, p-progressspinner\", inputs: { styleClass: \"styleClass\", strokeWidth: \"strokeWidth\", fill: \"fill\", animationDuration: \"animationDuration\", ariaLabel: \"ariaLabel\" }, host: { properties: { \"attr.aria-label\": \"ariaLabel\", \"attr.role\": \"'progressbar'\", \"attr.data-pc-name\": \"'progressspinner'\", \"attr.data-pc-section\": \"'root'\", \"attr.aria-busy\": \"true\", \"class\": \"cn(cx('root'), styleClass)\" } }, providers: [ProgressSpinnerStyle], usesInheritance: true, ngImport: i0, template: `\n        <svg [class]=\"cx('spin')\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\" [attr.data-pc-section]=\"'root'\">\n            <circle [class]=\"cx('circle')\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\" />\n        </svg>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinner, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-progressSpinner, p-progress-spinner, p-progressspinner',\n                    standalone: true,\n                    imports: [CommonModule, SharedModule],\n                    template: `\n        <svg [class]=\"cx('spin')\" viewBox=\"25 25 50 50\" [style.animation-duration]=\"animationDuration\" [attr.data-pc-section]=\"'root'\">\n            <circle [class]=\"cx('circle')\" cx=\"50\" cy=\"50\" r=\"20\" [attr.fill]=\"fill\" [attr.stroke-width]=\"strokeWidth\" stroke-miterlimit=\"10\" />\n        </svg>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [ProgressSpinnerStyle],\n                    host: {\n                        '[attr.aria-label]': 'ariaLabel',\n                        '[attr.role]': \"'progressbar'\",\n                        '[attr.data-pc-name]': \"'progressspinner'\",\n                        '[attr.data-pc-section]': \"'root'\",\n                        '[attr.aria-busy]': 'true',\n                        '[class]': \"cn(cx('root'), styleClass)\"\n                    }\n                }]\n        }], propDecorators: { styleClass: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }] } });\nclass ProgressSpinnerModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerModule, imports: [ProgressSpinner, SharedModule], exports: [ProgressSpinner, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerModule, imports: [ProgressSpinner, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.1.3\", ngImport: i0, type: ProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ProgressSpinner, SharedModule],\n                    exports: [ProgressSpinner, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressSpinner, ProgressSpinnerClasses, ProgressSpinnerModule, ProgressSpinnerStyle };\n\n","import { Component, input } from '@angular/core';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\n\n@Component({\n  selector: 'app-loader',\n  imports: [ProgressSpinnerModule],\n  templateUrl: './loader.html',\n})\nexport class Loader {\n  label = input.required<string>();\n}\n"],"mappings":"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","names":["ProgressSpinnerClasses","Loader"],"x_google_ignoreList":[1]}