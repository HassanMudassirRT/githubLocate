{"version":3,"sources":["node_modules/primeng/fesm2022/primeng-dom.mjs"],"sourcesContent":["import * as utils from '@primeuix/utils';\nimport { getCSSVariableByRegex } from '@primeuix/utils';\nimport { $dt } from '@primeuix/styled';\n\n/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n    static zindex = 1000;\n    static calculatedScrollbarWidth = null;\n    static calculatedScrollbarHeight = null;\n    static browser;\n    static addClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.add(className);\n            else\n                element.className += ' ' + className;\n        }\n    }\n    static addMultipleClasses(element, className) {\n        if (element && className) {\n            if (element.classList) {\n                let styles = className.trim().split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.classList.add(styles[i]);\n                }\n            }\n            else {\n                let styles = className.split(' ');\n                for (let i = 0; i < styles.length; i++) {\n                    element.className += ' ' + styles[i];\n                }\n            }\n        }\n    }\n    static removeClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                element.classList.remove(className);\n            else\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n    static removeMultipleClasses(element, classNames) {\n        if (element && classNames) {\n            [classNames]\n                .flat()\n                .filter(Boolean)\n                .forEach((cNames) => cNames.split(' ').forEach((className) => this.removeClass(element, className)));\n        }\n    }\n    static hasClass(element, className) {\n        if (element && className) {\n            if (element.classList)\n                return element.classList.contains(className);\n            else\n                return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n        }\n        return false;\n    }\n    static siblings(element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n    static find(element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n        return this.isElement(element) ? element.querySelector(selector) : null;\n    }\n    static index(element) {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static appendOverlay(overlay, target, appendTo = 'self') {\n        if (appendTo !== 'self' && overlay && target) {\n            this.appendChild(overlay, target);\n        }\n    }\n    static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n        if (overlay && target) {\n            if (calculateMinWidth) {\n                overlay.style.minWidth = `${DomHandler.getOuterWidth(target)}px`;\n            }\n            if (appendTo === 'self') {\n                this.relativePosition(overlay, target);\n            }\n            else {\n                this.absolutePosition(overlay, target);\n            }\n        }\n    }\n    static relativePosition(element, target, gutter = true) {\n        const getClosestRelativeElement = (el) => {\n            if (!el)\n                return;\n            return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n        };\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        const relativeElement = getClosestRelativeElement(element);\n        const relativeElementOffset = relativeElement?.getBoundingClientRect() || {\n            top: -1 * windowScrollTop,\n            left: -1 * windowScrollLeft\n        };\n        let top, left, origin = 'top';\n        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n            top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n            origin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight + targetOffset.top - relativeElementOffset.top;\n            origin = 'top';\n        }\n        const horizontalOverflow = targetOffset.left + elementDimensions.width - viewport.width;\n        const targetLeftOffsetInSpaceOfRelativeElement = targetOffset.left - relativeElementOffset.left;\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = (targetOffset.left - relativeElementOffset.left) * -1;\n        }\n        else if (horizontalOverflow > 0) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = targetLeftOffsetInSpaceOfRelativeElement - horizontalOverflow;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = targetOffset.left - relativeElementOffset.left;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        element.style.transformOrigin = origin;\n        if (gutter) {\n            const gutterValue = getCSSVariableByRegex(/-anchor-gutter$/)?.value;\n            element.style.marginTop = origin === 'bottom' ? `calc(${gutterValue ?? '2px'} * -1)` : (gutterValue ?? '');\n        }\n    }\n    static absolutePosition(element, target, gutter = true) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const elementOuterHeight = elementDimensions.height;\n        const elementOuterWidth = elementDimensions.width;\n        const targetOuterHeight = target.offsetHeight;\n        const targetOuterWidth = target.offsetWidth;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = this.getWindowScrollTop();\n        const windowScrollLeft = this.getWindowScrollLeft();\n        const viewport = this.getViewport();\n        let top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n    static getParents(element, parents = []) {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n        let scrollableParents = [];\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n                if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                    scrollableParents.push(parent);\n                }\n            }\n        }\n        return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n        let dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    }\n    static scrollInView(container, item) {\n        let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if (offset + itemHeight > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n    static fadeIn(element, duration) {\n        element.style.opacity = 0;\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    }\n    static fadeOut(element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    }\n    static getWindowScrollTop() {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] ||\n            p.webkitMatchesSelector ||\n            p['mozMatchesSelector'] ||\n            p['msMatchesSelector'] ||\n            function (s) {\n                return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n            };\n        return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n        let width = el.offsetWidth;\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    }\n    static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n    static getOuterHeight(el, margin) {\n        let height = el.offsetHeight;\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    }\n    static getHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    }\n    static getWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    }\n    static getViewport() {\n        let win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    }\n    static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n        };\n    }\n    static replaceElementWith(element, replacementElement) {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n        if (navigator && this.isClient()) {\n            return navigator.userAgent;\n        }\n    }\n    static isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    }\n    static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    static isTouchDevice() {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    static appendChild(element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target && target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n    static isElement(obj) {\n        return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    static calculateScrollbarWidth(el) {\n        if (el) {\n            let style = getComputedStyle(el);\n            return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            let scrollDiv = document.createElement('div');\n            scrollDiv.className = 'p-scrollbar-measure';\n            document.body.appendChild(scrollDiv);\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    }\n    static calculateScrollbarHeight() {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.className = 'p-scrollbar-measure';\n        document.body.appendChild(scrollDiv);\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n        element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    }\n    static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    }\n    static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) || [];\n        return {\n            browser: match[1] || '',\n            version: match[2] || '0'\n        };\n    }\n    static isInteger(value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n        }\n    }\n    static isHidden(element) {\n        return !element || element.offsetParent === null;\n    }\n    static isVisible(element) {\n        return element && element.offsetParent != null;\n    }\n    static isExist(element) {\n        return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n    }\n    static focus(element, options) {\n        element && document.activeElement !== element && element.focus(options);\n    }\n    static getFocusableSelectorString(selector = '') {\n        return `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-inputtext:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`;\n    }\n    static getFocusableElements(element, selector = '') {\n        let focusableElements = this.find(element, this.getFocusableSelectorString(selector));\n        let visibleFocusableElements = [];\n        for (let focusableElement of focusableElements) {\n            const computedStyle = getComputedStyle(focusableElement);\n            if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden')\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    }\n    static getFocusableElement(element, selector = '') {\n        let focusableElement = this.findSingle(element, this.getFocusableSelectorString(selector));\n        if (focusableElement) {\n            const computedStyle = getComputedStyle(focusableElement);\n            if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden')\n                return focusableElement;\n        }\n        return null;\n    }\n    static getFirstFocusableElement(element, selector = '') {\n        const focusableElements = this.getFocusableElements(element, selector);\n        return focusableElements.length > 0 ? focusableElements[0] : null;\n    }\n    static getLastFocusableElement(element, selector) {\n        const focusableElements = this.getFocusableElements(element, selector);\n        return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;\n    }\n    static getNextFocusableElement(element, reverse = false) {\n        const focusableElements = DomHandler.getFocusableElements(element);\n        let index = 0;\n        if (focusableElements && focusableElements.length > 0) {\n            const focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n            if (reverse) {\n                if (focusedIndex == -1 || focusedIndex === 0) {\n                    index = focusableElements.length - 1;\n                }\n                else {\n                    index = focusedIndex - 1;\n                }\n            }\n            else if (focusedIndex != -1 && focusedIndex !== focusableElements.length - 1) {\n                index = focusedIndex + 1;\n            }\n        }\n        return focusableElements[index];\n    }\n    static generateZIndex() {\n        this.zindex = this.zindex || 999;\n        return ++this.zindex;\n    }\n    static getSelection() {\n        if (window.getSelection)\n            return window.getSelection().toString();\n        else if (document.getSelection)\n            return document.getSelection().toString();\n        else if (document['selection'])\n            return document['selection'].createRange().text;\n        return null;\n    }\n    static getTargetElement(target, el) {\n        if (!target)\n            return null;\n        switch (target) {\n            case 'document':\n                return document;\n            case 'window':\n                return window;\n            case '@next':\n                return el?.nextElementSibling;\n            case '@prev':\n                return el?.previousElementSibling;\n            case '@parent':\n                return el?.parentElement;\n            case '@grandparent':\n                return el?.parentElement.parentElement;\n            default:\n                const type = typeof target;\n                if (type === 'string') {\n                    return document.querySelector(target);\n                }\n                else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n                    return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n                }\n                const isFunction = (obj) => !!(obj && obj.constructor && obj.call && obj.apply);\n                const element = isFunction(target) ? target() : target;\n                return (element && element.nodeType === 9) || this.isExist(element) ? element : null;\n        }\n    }\n    static isClient() {\n        return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n    }\n    static getAttribute(element, name) {\n        if (element) {\n            const value = element.getAttribute(name);\n            if (!isNaN(value)) {\n                return +value;\n            }\n            if (value === 'true' || value === 'false') {\n                return value === 'true';\n            }\n            return value;\n        }\n        return undefined;\n    }\n    static calculateBodyScrollbarWidth() {\n        return window.innerWidth - document.documentElement.offsetWidth;\n    }\n    static blockBodyScroll(className = 'p-overflow-hidden') {\n        document.body.style.setProperty('--scrollbar-width', this.calculateBodyScrollbarWidth() + 'px');\n        this.addClass(document.body, className);\n    }\n    static unblockBodyScroll(className = 'p-overflow-hidden') {\n        document.body.style.removeProperty('--scrollbar-width');\n        this.removeClass(document.body, className);\n    }\n    static createElement(type, attributes = {}, ...children) {\n        if (type) {\n            const element = document.createElement(type);\n            this.setAttributes(element, attributes);\n            element.append(...children);\n            return element;\n        }\n        return undefined;\n    }\n    static setAttribute(element, attribute = '', value) {\n        if (this.isElement(element) && value !== null && value !== undefined) {\n            element.setAttribute(attribute, value);\n        }\n    }\n    static setAttributes(element, attributes = {}) {\n        if (this.isElement(element)) {\n            const computedStyles = (rule, value) => {\n                const styles = element?.$attrs?.[rule] ? [element?.$attrs?.[rule]] : [];\n                return [value].flat().reduce((cv, v) => {\n                    if (v !== null && v !== undefined) {\n                        const type = typeof v;\n                        if (type === 'string' || type === 'number') {\n                            cv.push(v);\n                        }\n                        else if (type === 'object') {\n                            const _cv = Array.isArray(v)\n                                ? computedStyles(rule, v)\n                                : Object.entries(v).map(([_k, _v]) => (rule === 'style' && (!!_v || _v === 0) ? `${_k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${_v}` : !!_v ? _k : undefined));\n                            cv = _cv.length ? cv.concat(_cv.filter((c) => !!c)) : cv;\n                        }\n                    }\n                    return cv;\n                }, styles);\n            };\n            Object.entries(attributes).forEach(([key, value]) => {\n                if (value !== undefined && value !== null) {\n                    const matchedEvent = key.match(/^on(.+)/);\n                    if (matchedEvent) {\n                        element.addEventListener(matchedEvent[1].toLowerCase(), value);\n                    }\n                    else if (key === 'pBind') {\n                        this.setAttributes(element, value);\n                    }\n                    else {\n                        value = key === 'class' ? [...new Set(computedStyles('class', value))].join(' ').trim() : key === 'style' ? computedStyles('style', value).join(';').trim() : value;\n                        (element.$attrs = element.$attrs || {}) && (element.$attrs[key] = value);\n                        element.setAttribute(key, value);\n                    }\n                }\n            });\n        }\n    }\n    static isFocusableElement(element, selector = '') {\n        return this.isElement(element)\n            ? element.matches(`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`)\n            : false;\n    }\n}\n// @todo: update this when we remove the old domhandler\nfunction blockBodyScroll() {\n    utils.blockBodyScroll({ variableName: $dt('scrollbar.width').name });\n}\nfunction unblockBodyScroll() {\n    utils.unblockBodyScroll({ variableName: $dt('scrollbar.width').name });\n}\n\nclass ConnectedOverlayScrollHandler {\n    element;\n    listener;\n    scrollableParents;\n    constructor(element, listener = () => { }) {\n        this.element = element;\n        this.listener = listener;\n    }\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler, blockBodyScroll, unblockBodyScroll };\n\n"],"mappings":"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","names":["init_dist","origin"],"x_google_ignoreList":[0]}